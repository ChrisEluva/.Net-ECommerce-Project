//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECommerceUI.ProductsServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductsServiceReference.IProductServices")]
    public interface IProductServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductServices/GetAllProducts", ReplyAction="http://tempuri.org/IProductServices/GetAllProductsResponse")]
        ModelPOCO.Products[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductServices/GetAllProducts", ReplyAction="http://tempuri.org/IProductServices/GetAllProductsResponse")]
        System.Threading.Tasks.Task<ModelPOCO.Products[]> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductServices/AddProduct", ReplyAction="http://tempuri.org/IProductServices/AddProductResponse")]
        int AddProduct(ModelPOCO.Products product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductServices/AddProduct", ReplyAction="http://tempuri.org/IProductServices/AddProductResponse")]
        System.Threading.Tasks.Task<int> AddProductAsync(ModelPOCO.Products product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductServices/UpdateProduct", ReplyAction="http://tempuri.org/IProductServices/UpdateProductResponse")]
        void UpdateProduct(ModelPOCO.Products product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductServices/UpdateProduct", ReplyAction="http://tempuri.org/IProductServices/UpdateProductResponse")]
        System.Threading.Tasks.Task UpdateProductAsync(ModelPOCO.Products product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductServices/DeleteProduct", ReplyAction="http://tempuri.org/IProductServices/DeleteProductResponse")]
        void DeleteProduct(ModelPOCO.Products product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductServices/DeleteProduct", ReplyAction="http://tempuri.org/IProductServices/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(ModelPOCO.Products product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductServices/FindProduct", ReplyAction="http://tempuri.org/IProductServices/FindProductResponse")]
        ModelPOCO.Products FindProduct(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductServices/FindProduct", ReplyAction="http://tempuri.org/IProductServices/FindProductResponse")]
        System.Threading.Tasks.Task<ModelPOCO.Products> FindProductAsync(int ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServicesChannel : ECommerceUI.ProductsServiceReference.IProductServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServicesClient : System.ServiceModel.ClientBase<ECommerceUI.ProductsServiceReference.IProductServices>, ECommerceUI.ProductsServiceReference.IProductServices {
        
        public ProductServicesClient() {
        }
        
        public ProductServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ModelPOCO.Products[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<ModelPOCO.Products[]> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public int AddProduct(ModelPOCO.Products product) {
            return base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task<int> AddProductAsync(ModelPOCO.Products product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public void UpdateProduct(ModelPOCO.Products product) {
            base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task UpdateProductAsync(ModelPOCO.Products product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public void DeleteProduct(ModelPOCO.Products product) {
            base.Channel.DeleteProduct(product);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(ModelPOCO.Products product) {
            return base.Channel.DeleteProductAsync(product);
        }
        
        public ModelPOCO.Products FindProduct(int ID) {
            return base.Channel.FindProduct(ID);
        }
        
        public System.Threading.Tasks.Task<ModelPOCO.Products> FindProductAsync(int ID) {
            return base.Channel.FindProductAsync(ID);
        }
    }
}
