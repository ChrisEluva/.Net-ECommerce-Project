//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ECommerceUI.CustomersServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomersServiceReference.ICustomerServices")]
    public interface ICustomerServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerServices/GetAllCustomers", ReplyAction="http://tempuri.org/ICustomerServices/GetAllCustomersResponse")]
        ModelPOCO.Customers[] GetAllCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerServices/GetAllCustomers", ReplyAction="http://tempuri.org/ICustomerServices/GetAllCustomersResponse")]
        System.Threading.Tasks.Task<ModelPOCO.Customers[]> GetAllCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerServices/AddCustomer", ReplyAction="http://tempuri.org/ICustomerServices/AddCustomerResponse")]
        int AddCustomer(ModelPOCO.Customers customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerServices/AddCustomer", ReplyAction="http://tempuri.org/ICustomerServices/AddCustomerResponse")]
        System.Threading.Tasks.Task<int> AddCustomerAsync(ModelPOCO.Customers customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerServices/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerServices/UpdateCustomerResponse")]
        void UpdateCustomer(ModelPOCO.Customers customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerServices/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomerServices/UpdateCustomerResponse")]
        System.Threading.Tasks.Task UpdateCustomerAsync(ModelPOCO.Customers customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerServices/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerServices/DeleteCustomerResponse")]
        void DeleteCustomer(ModelPOCO.Customers customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerServices/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomerServices/DeleteCustomerResponse")]
        System.Threading.Tasks.Task DeleteCustomerAsync(ModelPOCO.Customers customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerServices/FindCustomer", ReplyAction="http://tempuri.org/ICustomerServices/FindCustomerResponse")]
        ModelPOCO.Customers FindCustomer(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerServices/FindCustomer", ReplyAction="http://tempuri.org/ICustomerServices/FindCustomerResponse")]
        System.Threading.Tasks.Task<ModelPOCO.Customers> FindCustomerAsync(int ID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerServicesChannel : ECommerceUI.CustomersServiceReference.ICustomerServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServicesClient : System.ServiceModel.ClientBase<ECommerceUI.CustomersServiceReference.ICustomerServices>, ECommerceUI.CustomersServiceReference.ICustomerServices {
        
        public CustomerServicesClient() {
        }
        
        public CustomerServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ModelPOCO.Customers[] GetAllCustomers() {
            return base.Channel.GetAllCustomers();
        }
        
        public System.Threading.Tasks.Task<ModelPOCO.Customers[]> GetAllCustomersAsync() {
            return base.Channel.GetAllCustomersAsync();
        }
        
        public int AddCustomer(ModelPOCO.Customers customer) {
            return base.Channel.AddCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<int> AddCustomerAsync(ModelPOCO.Customers customer) {
            return base.Channel.AddCustomerAsync(customer);
        }
        
        public void UpdateCustomer(ModelPOCO.Customers customer) {
            base.Channel.UpdateCustomer(customer);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerAsync(ModelPOCO.Customers customer) {
            return base.Channel.UpdateCustomerAsync(customer);
        }
        
        public void DeleteCustomer(ModelPOCO.Customers customer) {
            base.Channel.DeleteCustomer(customer);
        }
        
        public System.Threading.Tasks.Task DeleteCustomerAsync(ModelPOCO.Customers customer) {
            return base.Channel.DeleteCustomerAsync(customer);
        }
        
        public ModelPOCO.Customers FindCustomer(int ID) {
            return base.Channel.FindCustomer(ID);
        }
        
        public System.Threading.Tasks.Task<ModelPOCO.Customers> FindCustomerAsync(int ID) {
            return base.Channel.FindCustomerAsync(ID);
        }
    }
}
